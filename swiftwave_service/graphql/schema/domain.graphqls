enum ProtocolType {
    http
    https
    tcp
    udp
}

enum DomainSSLStatus {
    none
    pending
    issued
    failed
}

input DomainInput {
    name: String!
}

input CustomSSLInput {
    fullChain: String!
    privateKey: String!
}

type Domain {
    id : Uint!
    name: String!
    sslStatus: DomainSSLStatus!
    sslFullChain: String!
    sslPrivateKey: String! # obfuscated
    sslIssuedAt: Time!
    sslIssuer: String!
    sslAutoRenew: Boolean!
    ingressRules: [IngressRule!]!
    redirectRules: [RedirectRule!]!
}

extend type Query {
    domains: [Domain!]! @isAuthenticated
    domain(id: Uint!): Domain! @isAuthenticated
    verifyDomainConfiguration(name: String!): Boolean! @isAuthenticated
}

extend type Mutation {
    addDomain(input: DomainInput!): Domain! @isAuthenticated
    removeDomain(id: Uint!): Boolean! @isAuthenticated
    issueSSL(id: Uint!): Domain! @isAuthenticated
    addCustomSSL(id: Uint!, input: CustomSSLInput!): Domain! @isAuthenticated
}