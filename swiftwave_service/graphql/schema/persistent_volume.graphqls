enum PersistentVolumeType {
    local
    nfs
    cifs
}

type PersistentVolume {
    id: Uint!
    name: String!
    type: PersistentVolumeType!
    nfsConfig: NFSConfig!
    cifsConfig: CIFSConfig!
    persistentVolumeBindings: [PersistentVolumeBinding!]!
    backups: [PersistentVolumeBackup!]!
    restores: [PersistentVolumeRestore!]!
}

input PersistentVolumeInput {
    name: String!
    type: PersistentVolumeType!
    nfsConfig: NFSConfigInput!
    cifsConfig: CIFSConfigInput!
}

extend type Query {
    persistentVolumes: [PersistentVolume] @isAuthenticated
    persistentVolume(id: Uint!): PersistentVolume @isAuthenticated
    persistentVolumeSizeMb(id: Uint!): Float! @isAuthenticated
    isExistPersistentVolume(name: String!): Boolean! @isAuthenticated
}

extend type Mutation {
    createPersistentVolume(input: PersistentVolumeInput!): PersistentVolume @isAuthenticated
    deletePersistentVolume(id: Uint!): Boolean! @isAuthenticated
}